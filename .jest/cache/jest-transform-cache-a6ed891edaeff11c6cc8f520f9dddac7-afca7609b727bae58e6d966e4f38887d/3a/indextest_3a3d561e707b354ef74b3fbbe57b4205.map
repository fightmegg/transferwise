{"version":3,"sources":["index.test.js"],"names":["mock","__esModule","constructEvent","jest","fn","describe","beforeEach","resetAllMocks","test","tw","TransferWise","expect","toThrowError","Error","token","sandbox","toEqual","url","fetch","mockReturnValue","then","request","toHaveBeenCalledTimes","toHaveBeenCalledWith","method","json","headers","Authorization","version","path","any","Object","body","type","JSON","stringify","profiles","borderlessAccounts","each","profile","currency","params","input","recipientAccounts","source","quotes","targetAccount","input2","transfers","simulation","webhooks"],"mappings":"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","sourcesContent":["import fetch from \"node-fetch\";\nimport TransferWise from \"../index\";\nimport { constructEvent } from \"../webhooks\";\n\njest.mock(\"node-fetch\", () => jest.fn());\n\njest.mock(\"../webhooks\", () => ({\n  __esModule: true,\n  constructEvent: jest.fn()\n}));\n\ndescribe(\"TransferWise\", () => {\n  beforeEach(() => {\n    jest.resetAllMocks();\n  });\n\n  describe(\"constructor\", () => {\n    test(\"it THROWS if no token is given\", () => {\n      const tw = () => new TransferWise();\n      expect(tw).toThrowError(new Error(\"token is required\"));\n    });\n\n    test(\"it sets instance variables correctly for sandbox\", () => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      expect(tw.token).toEqual(\"1234\");\n      expect(tw.sandbox).toEqual(true);\n      expect(tw.url).toEqual(\"https://api.sandbox.transferwise.tech\");\n    });\n\n    test(\"it sets instance variables correctly for live\", () => {\n      const tw = new TransferWise({ token: \"1234\" });\n      expect(tw.token).toEqual(\"1234\");\n      expect(tw.sandbox).toEqual(false);\n      expect(tw.url).toEqual(\"https://api.transferwise.com\");\n    });\n  });\n\n  describe(\"request\", () => {\n    beforeEach(() => {\n      fetch.mockReturnValue({ then: jest.fn() });\n    });\n\n    test(\"it calls fetch with defaults\", () => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      tw.request();\n      expect(fetch).toHaveBeenCalledTimes(1);\n      expect(fetch).toHaveBeenCalledWith(\n        \"https://api.sandbox.transferwise.tech/v1\",\n        {\n          method: \"GET\",\n          json: true,\n          headers: {\n            Authorization: `Bearer 1234`,\n            \"Content-Type\": \"application/json\",\n            \"cache-control\": \"no-cache\"\n          }\n        }\n      );\n    });\n\n    test(\"it calls fetch with custom version & path\", () => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      tw.request({ version: \"v3\", path: \"/profiles\" });\n      expect(fetch).toHaveBeenCalledWith(\n        \"https://api.sandbox.transferwise.tech/v3/profiles\",\n        expect.any(Object)\n      );\n    });\n\n    test(\"it calls fetch with custom method & json body\", () => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      tw.request({\n        version: \"v3\",\n        path: \"/profiles\",\n        method: \"POST\",\n        body: { type: \"BALANCE\" }\n      });\n      expect(fetch).toHaveBeenCalledWith(\n        \"https://api.sandbox.transferwise.tech/v3/profiles\",\n        {\n          method: \"POST\",\n          json: true,\n          body: JSON.stringify({ type: \"BALANCE\" }),\n          headers: expect.any(Object)\n        }\n      );\n    });\n  });\n\n  describe(\"profiles\", () => {\n    test('it calls request with { path: \"/profiles\" }', () => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      tw.request = jest.fn();\n      tw.profiles();\n      expect(tw.request).toHaveBeenCalledWith({ path: \"/profiles\" });\n    });\n  });\n\n  describe(\"borderlessAccounts\", () => {\n    test('it calls request with { path: \"/borderless-accounts?profileId=2486\" }', () => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      tw.request = jest.fn();\n      tw.borderlessAccounts(2486);\n      expect(tw.request).toHaveBeenCalledWith({\n        path: \"/borderless-accounts?profileId=2486\"\n      });\n    });\n  });\n\n  describe(\"recipientAccounts\", () => {\n    test.each([\n      [\n        \"create\",\n        { method: \"POST\", path: \"/accounts\", body: { profile: 2486 } },\n        { profile: 2486 }\n      ],\n      [\"get\", { path: \"/accounts/222222\" }, 222222],\n      [\"delete\", { method: \"DELETE\", path: \"/accounts/222222\" }, 222222],\n      [\"list\", { path: \"/accounts?currency=GBP\" }, { currency: \"GBP\" }]\n    ])(\".%s calls request with %o\", (fn, params, input) => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      tw.request = jest.fn();\n      tw.recipientAccounts[fn](input);\n      expect(tw.request).toHaveBeenCalledWith(params);\n    });\n  });\n\n  describe(\"quotes\", () => {\n    test.each([\n      [\"temporary\", { path: \"/quotes?source=GBP\" }, { source: \"GBP\" }],\n      [\n        \"create\",\n        { method: \"POST\", path: \"/quotes\", body: { profile: 2486 } },\n        { profile: 2486 }\n      ],\n      [\"get\", { path: \"/quotes/222222\" }, 222222]\n    ])(\".%s calls request with %o\", (fn, params, input) => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      tw.request = jest.fn();\n      tw.quotes[fn](input);\n      expect(tw.request).toHaveBeenCalledWith(params);\n    });\n  });\n\n  describe(\"transfers\", () => {\n    test.each([\n      [\n        \"create\",\n        { method: \"POST\", path: \"/transfers\", body: { targetAccount: 222222 } },\n        { targetAccount: 222222 },\n        null\n      ],\n      [\n        \"cancel\",\n        { method: \"PUT\", path: \"/transfers/222222/cancel\" },\n        222222,\n        null\n      ],\n      [\"get\", { path: \"/transfers/222222\" }, 222222, null],\n      [\"issues\", { path: \"/transfers/222222/issues\" }, 222222, null],\n      [\n        \"fund\",\n        {\n          method: \"POST\",\n          version: \"v3\",\n          path: \"/profiles/2486/transfers/222222/payments\",\n          body: { type: \"BALANCE\" }\n        },\n        2486,\n        222222\n      ],\n      [\n        \"deliveryEstimate\",\n        { path: \"/delivery-estimates/222222\" },\n        222222,\n        null\n      ],\n      [\"list\", { path: \"/transfers?profile=2486\" }, { profile: 2486 }, null]\n    ])(\".%s calls request with %o\", (fn, params, input, input2) => {\n      const tw = new TransferWise({ token: \"1234\", sandbox: true });\n      tw.request = jest.fn();\n      tw.transfers[fn](input, input2);\n      expect(tw.request).toHaveBeenCalledWith(params);\n    });\n  });\n\n  describe(\"simulation\", () => {\n    describe(\"transfers\", () => {\n      test.each([\n        [\n          \"processing\",\n          { path: \"/simulation/transfers/222222/processing\" },\n          222222\n        ],\n        [\n          \"fundsConverted\",\n          { path: \"/simulation/transfers/222222/funds_converted\" },\n          222222\n        ],\n        [\n          \"outgoingPaymentSent\",\n          { path: \"/simulation/transfers/222222/outgoing_payment_sent\" },\n          222222\n        ],\n        [\n          \"bouncedBack\",\n          { path: \"/simulation/transfers/222222/bounced_back\" },\n          222222\n        ],\n        [\n          \"fundsRefunded\",\n          { path: \"/simulation/transfers/222222/funds_refunded\" },\n          222222\n        ]\n      ])(\".%s calls request with %o\", (fn, params, input) => {\n        const tw = new TransferWise({ token: \"1234\", sandbox: true });\n        tw.request = jest.fn();\n        tw.simulation.transfers[fn](input);\n        expect(tw.request).toHaveBeenCalledWith(params);\n      });\n    });\n  });\n\n  describe(\"webhooks\", () => {\n    describe(\"constructEvent\", () => {\n      test(\"constructEvent calls constructEvent with (sandbox=true, payload, signature)\", () => {\n        const tw = new TransferWise({ token: \"1234\", sandbox: true });\n        tw.webhooks.constructEvent(\"payload\", \"signature\");\n        expect(constructEvent).toHaveBeenCalledTimes(1);\n        expect(constructEvent).toHaveBeenCalledWith(\n          true,\n          \"payload\",\n          \"signature\"\n        );\n      });\n\n      test(\"constructEvent calls constructEvent with (sandbox=true, payload, signature)\", () => {\n        const tw = new TransferWise({ token: \"1234\", sandbox: false });\n        tw.webhooks.constructEvent(\"payload\", \"signature\");\n        expect(constructEvent).toHaveBeenCalledTimes(1);\n        expect(constructEvent).toHaveBeenCalledWith(\n          false,\n          \"payload\",\n          \"signature\"\n        );\n      });\n    });\n  });\n});\n"]}